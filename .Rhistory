qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]#+lmda/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:10)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+N[i-1]*lmda/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]#+N[i-1]*lmda/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]+N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-1
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda#/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:5)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
library(ggplot2)
time<-c(1:100)
N<-time*0
lmda<-2
a<-0.1
tst<-time*0
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
tst[i]<-lmda/(1+a*N[i])
}
}
qplot(time,N)
qplot(time,N)+theme_bw()
qplot(time,N)+theme_classic()
qplot(time,N)+theme_classic()+geom_smooth()
qplot(time,N,geom=curve())+theme_classic()
qplot(time,N,geom=curve+theme_classic()
)
qplot(time,N,geom=curve)+theme_classic()
qplot(time,N,geom=line)+theme_classic()
qplot(time,N,geom="line")+theme_classic()
library(ggplot2)
time<-c(1:100) # Vector of time
N<-time*0 # Vector tracking N individuals over time
lmda<-5 # lambda -- growth rate when rare
a<-0.1 # intraspecific interference/competition parameter
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
}
}
qplot(time,N,geom="line")+theme_classic()
library(ggplot2)
time<-c(1:100) # Vector of time
N<-time*0 # Vector tracking N individuals over time
lmda<-2 # lambda -- growth rate when rare
a<-0.01 # intraspecific interference/competition parameter
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
}
}
qplot(time,N,geom="line")+theme_classic()
library(ggplot2)
time<-c(1:100) # Vector of time
N<-time*0 # Vector tracking N individuals over time
lmda<-2 # lambda -- growth rate when rare
a<-0.001 # intraspecific interference/competition parameter
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
}
}
qplot(time,N,geom="line")+theme_classic()
library(ggplot2)
time<-c(1:100) # Vector of time
N<-time*0 # Vector tracking N individuals over time
lmda<-1.3 # lambda -- growth rate when rare
a<-0.001 # intraspecific interference/competition parameter
for (i in time){
if(i==1){
N[i]<-1} else
{
N[i]<-N[i-1]*lmda/(1+a*N[i-1])
}
}
qplot(time,N,geom="line")+theme_classic()
mean
mean()
lm
plot
library(ggplot2)
qplot
test<-function(x=NA,ind=ind,s1=s1){
plot(ind,s1,data=x)
return(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
test(x)
testy<-function(x=NA,ind=ind,s1=s1){
plot(ind,s1,data=x)
return(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x)
testy<-function(x=NA,ind=ind,s1=s1){
plot(ind,s1,data=x)
return(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x)
x
testy(x,ind,s1)
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
lm(ind~s1,data=x)
testy<-function(x=NA,ind=ind,s1=s1){
plot(ind,s1,data=x)
print(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(data[ind],data[s1])
print(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(data[ind,],data[s1,])
print(lm(ind~s1,data=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(x[ind,],x[s1,])
print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(x[,ind],x[,s1])
print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(x$ind,x$s1)
print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=ind,s1=s1){
plot(x$ind,x$s1)
print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=NA,s1=NA){
plot(x$ind,x$s1)
print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
testy<-function(x=NA,ind=NA,s1=NA){
plot(x$ind,x$s1)
#  print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,"ind","s1")
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,ind,s1)
ins
ind
s1
testy<-function(x=NA,ind=NA,s1=NA){
plot(x$ind,x$s1)
#  print(lm(ind~s1,x=x))
}
x<-data.frame(ind=rnorm(100),s1=rnorm(100))
testy(x,ind,s1)
rootdata<-data.frame(ind=c(rep("A1",100),rep("B1",100)))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=,path=)
head(rootdata)
# Bcor(rootdata,ind=ID,s1=myc,s2=path,coef=cor)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=rnorm(200),path=rnorm(200))
head(rootdata)
# Bcor(rootdata,ind=ID,s1=myc,s2=path,coef=cor)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
# Sample run code:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,prob=c(0.8,0.2)),path=sample(0:1,prob=c(0.8,0.2)))
head(rootdata)
sample(0:1,prob=c(0.8,0.2))
sample(0:1,prob=c(0.8,0.2))
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,100,prob=c(0.8,0.2)),path=sample(0:1,100,prob=c(0.8,0.2)))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,100,prob=c(0.8,0.2)),path=sample(0:1,100,prob=c(0.8,0.2)))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,100,prob=c(0.8,0.2)),path=sample(0:1,100,prob=c(0.8,0.2)))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,100,prob=c(0.8,0.2)),path=sample(0:1,100,prob=c(0.8,0.2)))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),myc=sample(0:1,100,prob=c(0.8,0.2)),path=sample(0:1,100,prob=c(0.8,0.2)))
head(rootdata)
sample(0:1,100,prob=c(0.8,0.2))
sample(0:1,100,prob=c(0.8,0.2),replace=T)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
head(rootdata)
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
head(rootdata)
aggregate(c(myc,path)by=list(ID),fun=cor(myc,path))
aggregate(c(myc,path),by=list(ID),fun=cor(myc,path))
aggregate(c(myc,path),by=list(ID),fun=cor(x,y))
aggregate(c(rootdata$myc,rootdata$path),by=list(ID),fun=cor(x,y))
aggregate(c(rootdata$myc,rootdata$path),by=list(ID),FUN=cor(x,y))
aggregate(c(rootdata$myc,rootdata$path),by=list(ID),FUN=cor(x,x))
cor(myc,path,data=rootdata)
cor(rootdata$myc,rootdata$path)
?bu
?by
?cor
for(i in levels(rootdata$ID)){
print(ID,cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]))
}
for(i in levels(rootdata$ID)){
print(i,cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]))
}
i
cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i])
for(i in levels(rootdata$ID)){
paste(i,cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]))
}
print(paste(i,cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i])))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i])),3))
}
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
# Example:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
rootdata$myc[rootdata$ID==i]
rootdata$path[rootdata$ID==i]
# Example:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
# Example:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,100,prob=c(0.8,0.2),replace=T),
path=sample(0:1,100,prob=c(0.8,0.2),replace=T))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
# Example:
rootdata<-data.frame(ID=c(rep("A1",100),rep("B1",100)),
myc=sample(0:1,200,prob=c(0.8,0.2),replace=T),
path=sample(0:1,200,prob=c(0.8,0.2),replace=T))
for(i in levels(rootdata$ID)){
print(paste(i,round(cor(rootdata$myc[rootdata$ID==i],rootdata$path[rootdata$ID==i]),3)))
}
