(1|pop),
data=ndata,control=glmerControl(optimizer="bobyqa"))
mod1.nb1<-glmer(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family=negative.binomial(theta=5),
control=glmerControl(optimizer="bobyqa"))
-2*(logLik(mod1.nb)-logLik(mod1.nb1))
-2*(logLik(mod1.poisson)-logLik(mod1.nb))
mod1.nb1<-glmer(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family=negative.binomial(theta=getME(mod1.nb, "glmer.nb.theta")),
control=glmerControl(optimizer="bobyqa"))
summary(mod1.nb1)
summary(mod1.nb)
-2*(logLik(mod1.poisson)-logLik(mod1.nb))
deviance(mod1.nb) # the deviance of this model is actually smaller than the critical value so it fits the data!!
# this is a lot better.
1/getME(mod1.nb, "glmer.nb.theta")
getME(mod1.nb, "glmer.nb.theta")
xb <- predict(mod1.poisson)
xb
g <- cut(xb, breaks=quantile(xb,seq(0,100,5)/100))
m <- tapply(ab$art, g, mean)
m <- tapply(ndata$location, g, mean)
?tapply
m <- tapply(ndata$Mycorrhiza, g, mean)
v <- tapply(ndata$Mycorrhiza, g, var)
pr<-resid(mod1.poisson, type='pearson')
n<-nrow(ndata)
c<-length(coef(mod1.poisson))
(Dispmod1.poisson<-sum(pr^2)/(n-c))
phi <- sum(pr^2)/df.residual(mod1.poisson)
phi
# this is a lot better.
theta<-getME(mod1.nb, "glmer.nb.theta")
xb <- predict(mod1.poisson)
g <- cut(xb, breaks=quantile(xb,seq(0,100,5)/100))
m <- tapply(ndata$Mycorrhiza, g, mean)
v <- tapply(ndata$Mycorrhiza, g, var)
png("c4afig1.png",width=500,height=400)
plot(m, v, xlab="Mean", ylab="Variance",
+   main="Mean-Variance Relationship")
png("c4afig1.png",width=500,height=400)
plot(m, v, xlab="Mean", ylab="Variance",main="Mean-Variance Relationship")
x <- seq(0.63,3.37,0.02)
lines(x, x*phi, lty="dashed")
lines(x, x*(1+x/theta))
dev.off()
plot(m, v, xlab="Mean", ylab="Variance",main="Mean-Variance Relationship")
x <- seq(0.63,3.37,0.02)
lines(x, x*phi, lty="dashed")
lines(x, x*(1+x/theta))
x*phi
m
v
ndata$Mycorrhiza
g
g <- cut(xb, breaks=quantile(xb,seq(0,100,5)/100))
?seq
range(m)
83.77778-42.16667
length(x)
83.77778-42.16667 /138
41.61111/138
x <- seq(42.16667,83.77778,0.3)
lines(x, x*phi, lty="dashed")
plot(m, v, xlab="Mean", ylab="Variance",main="Mean-Variance Relationship")
x <- seq(42.16667,83.77778,0.3)
lines(x, x*phi, lty="dashed")
lines(x, x*(1+x/theta))
phi <- sum(pr^2)/df.residual(mod1.poisson)
phi
(phi <- sum(pr^2)/df.residual(mod1.poisson))
(Dispmod1.poisson<-sum(pr^2)/(n-c))
(phi <- sum(pr^2)/df.residual(mod1.poisson))
df.residual(mod1.poisson)
(phimod1.binom <- sum(pr^2)/df.residual(mod1.binom))
pr<-resid(mod1.binom, type='pearson')
(phimod1.binom <- sum(pr^2)/df.residual(mod1.binom))
qchisq(0.95, df.residual(mod1.poisson))
ChiCrit<-qchisq(0.95, df.residual(mod1.poisson))
deviance(mod1.poisson)
pr<-resid(mod1.poisson, type='pearson')
sum(pr^2)
ChiSq<-sum(pr^2)
ChiCrit>=ChiSq
mod1.nb<-glmmadm(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family="nbinom1")
library("glmmADMB", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
mod1.nb<-glmmadm(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family="nbinom1")
mod1.nb<-glmmadmb(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family="nbinom1")
-2*(logLik(mod1.poisson)-logLik(mod1.nb))
scaleloc(mod1.nb)
residfit(mod1.nb)
deviance(mod1.nb) # the deviance of this model is actually smaller than the critical value so it fits the data!!
pr<-resid(mod1.nb, type='pearson')
ChiSq<-sum(pr^2)
ChiCrit>=ChiSq
ChiSq
summary(mod1.nb)
mod1.nb$alpha
1/mod1.nb$alpha
data=ndata, control=glmerControl(optimizer="bobyqa")
mod1.nb<-glmer.nb(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata, control=glmerControl(optimizer="bobyqa"))
mod1.nb1<-glmer.nb(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata, control=glmerControl(optimizer="bobyqa"))
mod1.nb1<-glmer.nb(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata, control=glmerControl(optimizer="bobyqa"))
theta<-getME(mod1.nb1, "glmer.nb.theta")
theta
summary(mod1.nb1)
summary(mod1.nb)
mod1.nb<-glmmadmb(Mycorrhiza ~ species + location + species:location +
(1|pop),
data=ndata,family="nbinom1")
summary(mod1.nb)
ndata$Prop_Lesions<- ndata$Lesions/(ndata$Lesions+ndata$None.Path)
ndata$Prop_Lesions
hist(ndata$Prop_Lesions)
shapiro.test(ndata$Prop_Lesions)
mod1.gauss<-glmmadmb( ~ species + location + species:location +
(1|pop),
data=ndata, family="gaussian")
mod1.gauss<-glmmadmb(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata, family="gaussian")
scaleloc(mod1.gauss)
mod1.gauss<-glmer(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata, family="gaussian")
mod1.gauss<-lmer(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata)
scaleloc(mod1.gauss)
residfit(mod1.gauss)
f
f <- fitted(mod.nbl)
f <- fitted(mod.nb)
f <- fitted(mod1.nb)
f
str(f)
names(f)
#do the same for the Scale-Location plot
scaleloc <- function(model,col="black") {
f <- fitted(model)
r <- sqrt(abs(residuals(model, type='pearson'))) #transformed pearson residuals
plot(f,r,col=col, main='Scale-Location Plot', labels = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
}
scaleloc(mod1.gauss)
#do the same for the Scale-Location plot
scaleloc <- function(model,col="black") {
f <- fitted(model)
r <- sqrt(abs(residuals(model, type='pearson'))) #transformed pearson residuals
plot(f,r,col=col, main='Scale-Location Plot', pch = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
}
scaleloc(mod1.gauss)
f <- fitted(mod1.gauss)
names(f)
f
names(f)<-as.character(1:length(f))
names(f)
#do the same for the Scale-Location plot
scaleloc <- function(model,col="black") {
f <- fitted(model)
names(f)<-as.character(1:length(f))
r <- sqrt(abs(residuals(model, type='pearson'))) #transformed pearson residuals
plot(f,r,col=col, main='Scale-Location Plot', pch = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
}
scaleloc(mod1.gauss)
names(f)
scaleloc <- function(model,col="black") {
f <- fitted(model)
names(f)<-as.character(1:length(f))
r <- sqrt(abs(residuals(model, type='pearson'))) #transformed pearson residuals
plot(f,r,col=col, main='Scale-Location Plot', pch = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
}
f<-NULL
scaleloc(mod1.gauss)
f <- fitted(mod1.gauss)
f
names(f)<-as.character(1:length(f))
f
r <- sqrt(abs(residuals(mod1.gauss, type='pearson')))
plot(f,r,col=col, main='Scale-Location Plot', pch = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
plot(f,r, main='Scale-Location Plot', pch = names(f))
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
#do the same for the Scale-Location plot
scaleloc <- function(model,col="black") {
f <- fitted(model)
r <- sqrt(abs(residuals(model, type='pearson'))) #transformed pearson residuals
plot(f,r,col=col, main='Scale-Location Plot')
L1 <- loess(r~f)
fvec = seq(min(f),max(f),length.out=1000)
lines(fvec,predict(L1,fvec),col=2)
}
shapiro.test(ndata$Prop_Lesions)
scaleloc(mod1.gauss)
residfit(mod1.gauss)
plot(mod1.gauss)
scaleloc(mod1.gauss)
mod1.gauss<-lmer(sqrt(Prop_Lesions)~ species + location + species:location +
(1|pop),
data=ndata)
scaleloc(mod1.gauss)
residfit(mod1.gauss)
shapiro.test(sqrt(ndata$Prop_Lesions))
mod1.gauss<-lmer(log(Prop_Lesions)~ species + location + species:location +
(1|pop),
data=ndata)
shapiro.test(log(ndata$Prop_Lesions))
bc<-boxcox(mod1.gauss, lambda = seq(-2, 2, 0.1))
mod1.gauss<-lmer(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata)
mod1.gauss<-lm(Prop_Lesions~ species + location + species:location,data=ndata)
bc<-boxcox(mod1.gauss, lambda = seq(-2, 2, 0.1))
lambda <- bc$x[which.max(bc$y)]
ndata <- cbind(ndata, ((fdata_rs.corr$r.t^lambda)-1)/lambda)
ndata <- cbind(ndata, ((ndata$Prop_Lesions^lambda)-1)/lambda)
names(fdata_rs.corr)[length(fdata_rs.corr)] <- "Yprime"
shapiro.test(ndata$Yprime)
names(ndata)[length(ndata)] <- "Yprime"
shapiro.test(ndata$Yprime)
mod1.gauss<-lm(Prop_Lesions~ species + location + species:location,data=ndata)
bc<-boxcox(mod1.gauss, lambda = seq(-2, 2, 0.1))
lambda <- bc$x[which.max(bc$y)]
ndata <- cbind(ndata, ((ndata$(Prop_Lesions+1)^lambda)-1)/lambda)
ndata <- cbind(ndata, (((ndata$Prop_Lesions+1)^lambda)-1)/lambda)
names(ndata)[length(ndata)] <- "Yprimet"
shapiro.test(ndata$Yprimet)
hist(ndata$Yprime)
mod1.gaussY<-lmer(Yprime~ species + location + species:location +
(1|pop),
data=ndata)
summary(mod1.gaussY)
anova(mod1.gaussY)
summary(anova(mod1.gaussY))
anovasummary((mod1.gaussY))
anova(summary(mod1.gaussY))
mod1.gaussY2<-lmer(Yprime~ species + location +
(1|pop),
data=ndata)
anova(mod1.gaussY,mod1.gaussY2)
ChiCrit<-qchisq(0.95, df.residual(mod1.gaussY))
deviance(mod1.gaussY)
ChiSq<-sum(pr^2)
ChiCrit>=ChiSq
IBtab(mod1.gaussY,mod1.poisson,mod1.nb)
ICtab(mod1.gaussY,mod1.poisson,mod1.nb)
car::qqPlot(ndata$Yprime, "normal")
library("car", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
qqPlot(ndata$Yprime, "normal")
qqPlot(ndata$Yprime)
mod1.gaussY<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndata,family="gaussian")
ICtab(mod1.gaussY,mod1.poisson,mod1.nb)
cooksd <- cooks.distance(mod1.gaussY)
cooksd <- cooks.distance(mod1.gauss)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")
cooksd
names(cooksd) <- 1:length(cooksd)
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")
plot(cooksd, pch="*", cex=2, main="Influential Obs by Cooks distance")  # plot cook's distance
abline(h = 4*mean(cooksd, na.rm=T), col="red")  # add cutoff line
text(x=1:length(cooksd)+1, y=cooksd, labels=ifelse(cooksd>4*mean(cooksd, na.rm=T),names(cooksd),""), col="red")
ndataRM<-ndata[-c(66,73,97,130,133,135,136,176,172,185,204),]
length(ndataRM$indiv)
mod1.gaussYRM<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM, family="gaussian")
ICtab(mod1.gaussY,mod1.poisson,mod1.nb,mod1.gaussYRM)
qqPlot(ndataRM$Yprime)
qqPlot(ndata$Yprime)
shapiro.test(ndataRM$Yprime)
mod1.gaussYRM<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM, family="gaussian")
ICtab(mod1.gaussY,mod1.poisson,mod1.nb,mod1.gaussYRM)
summary(mod1.gaussYRM)
ncvTest(mod1.gaussYRM)
qqplot(mod1.gaussYRM)
qqPlot(mod1.gaussYRM)
bptest(mod1.gaussYRM)
library("lmtest", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
bptest(mod1.gaussYRM)
install.packages("gvlma")
gvlma(mod1.gaussYRM)
library("gvlma", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
gvlma(mod1.gaussYRM)
gvlma(mod1.gauss)
mod1.lmgaussYRM<-lm(Yprime~ species + location + species:location,
data=ndataRM)
gvlma(mod1.lmgaussYRM)
bptest(mod1.gaussYRM)
hist(ndataRM$Yprime)
scaleloc(mod1.gauss)
residfit(mod1.gauss)
scaleloc(mod1.gaussYRM)
mod1.gaussYRM<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM, family="gaussian")
scaleloc(mod1.gaussYRM)
summary(mod1.gaussYRM)
mod1.gaussYRM<-lmer(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM)
scaleloc(mod1.gaussYRM)
residfit(mod1.gaussYRM)
summary(mod1.gaussYRM)
mod1.gaussYRM1<-lmer(Yprime~ species + location+
(1|pop),
data=ndataRM)
anova(mod1.gaussYRM1,mod1.gaussYRM)
mod1.gaussYRM<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM, family="gaussian")
mod1.gaussYRM<-glmmadmb(Yprime~ species + location +
(1|pop),
data=ndataRM, family="gaussian")
anova(mod1.gaussYRM1,mod1.gaussYRM)
mod1.gaussYRM<-glmmadmb(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM, family="gaussian")
mod1.gaussYRM1<-glmmadmb(Yprime~ species + location +
(1|pop),
data=ndataRM, family="gaussian")
anova(mod1.gaussYRM1,mod1.gaussYRM)
scaleloc(mod1.gaussYRM)
mod1.gaussYRM<-lmer(Yprime~ species + location + species:location +
(1|pop),
data=ndataRM)
mod1.gaussYRM1<-lmer(Yprime~ species + location+
(1|pop),
data=ndataRM)
scaleloc(mod1.gaussYRM)
residfit(mod1.gaussYRM)
scaleloc(mod1.gaussYRM)
shapiro.test(ndataRM$Yprime)
hist(ndataRM$Yprime)
hist(ndata$Yprime)
hist(ndata$Lesions)
hist(ndata$Prop_Lesions)
detach("package:gvlma", unload=TRUE)
library("fitdistrplus", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
descdist(mod1.gauss)
descdist(ndata$Yprime)
descdist(ndata$Yprime,1000)
descdist(ndata$Yprime,boot=1000)
descdist(ndataRM$Yprime,boot=1000)
descdist(ndata$Yprime,boot=1000)
descdist(ndata$Prop_Lesions,boot=1000)
descdist(ndata$Yprime,boot=1000)
descdist(ndata$Prop_Lesions,boot=1000)
mod1.beta<-glmmadmb(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata, family="beta")
mod1.beta<-glmmadmb(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata, family="Beta")
install.packages("glmmTMB")
library("glmmTMB", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
mod1.beta<-glmmTMB(Prop_Lesions~ species + location + species:location +
(1|pop),
data=ndata, family=list(family="beta",link="logit"))
hist(ndata$Prop_Lesions)
plot(density(ndata$Prop_Lesions))
mu <- mean(ndata$Prop_Lesions)
var <- var(ndata$Prop_Lesions)
fit.dist <- fitdist(ndata$Prop_Lesions,"beta")
fit.dist <- fitdist(ndata$Prop_Lesions,"beta", method = "mle")
summary(ndata$Prop_Lesions)
fitdist(ndata$Prop_Lesions,"beta")
summary(ndata$Prop_Lesions)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
estBetaParams(mu, var)
plot(density(ndata$Prop_Lesions))
summary(ndata$Prop_Lesions)
summary(ndata$Prop_Lesions)$max
str(summary(ndata$Prop_Lesions))
plot(density(ndata$Prop_Lesions))
mod1.beta<-glmmTMB(Prop_Lesions~ species + location + species:location +
(1|pop), ziformula=,
data=ndata, family=list(family="beta",link="logit"))
plot(density(ndata$Prop_Lesions))
summary(ndata$Prop_Lesions)
ndata$Prop_Lesions
y<-ndata$Prop_Lesions
ndata$Prop_Lesions
ndata$location
length(a)
a<-c(O,I,O,O,O,I,O,O,I,I,O,O,I,I,O,O,I,I,I,I,O,O,I,I,O,I,I,O,O,O,O,O,O,O,O,O,I,I,I,I,I,O,I,I,O,O,I,I,I,I,I,I,I,O,I,O,O,O,O,O,O,O,O,I,O,I,O,I,O,O,I,O,I,I,O,I,I,O,O,O,O,O,I,I,I,I,I,I,O,I,O,I,O,O,I,I,O,O,I,I,O,I,O,O,O,I,I,I,I,I,O,I,I,O,I,I,I,O,I,I,I,I,O,O,O,I,I,O,I,I,O,I,O,I,I,O,O,O,O,O,O,O,O,O,O,I,O,I,I,I,I,O,O,O,O,I,I,O,I,I,I,I,O,I,I,I,I,O,O,I,I,O,O,O,O,O,I)
a<-c(O,I,O,O,O,I,O,O,I,I,O,O,I,I,O,O,I,I,I,I,O,O,I,I,O,I,I,O,O,O,O,O,O,O,O,O,I,I,I,I,I,O,I,I,O,O,I,I,I,I,I,I,I,O,I,O,O,O,O,O,O,O,O,I,O,I,O,I,O,O,I,O,I,I,O,I,I,O,O,O,O,O,I,I,I,I,I,I,O,I,O,I,O,O,I,I,O,O,I,I,O,I,O,O,O,I,I,I,I,I,O,I,I,O,I,I,I,O,I,I,I,I,O,O,O,I,I,O,I,I,O,I,O,I,I,O,O,O,O,O,O,O,O,O,O,I,O,I,I,I,I,O,O,O,O,I,I,O,I,I,I,I,O,I,I,I,I,O,O,I,I,O,O,O,O,O,I)
a<-c("O","I","O","O","O","I","O","O","I","I","O","O","I","I","O","O","I","I","I","I","O","O","I","I","O","I","I","O","O","O","O","O","O","O","O","O","I","I","I","I","I","O","I","I","O","O","I","I","I","I","I","I","I","O","I","O","O","O","O","O","O","O","O","I","O","I","O","I","O","O","I","O","I","I","O","I","I","O","O","O","O","O","I","I","I","I","I","I","O","I","O","I","O","O","I","I","O","O","I","I","O","I","O","O","O","I","I","I","I","I","O","I","I","O","I","I","I","O","I","I","I","I","O","O","O","I","I","O","I","I","O","I","O","I","I","O","O","O","O","O","O","O","O","O","O","I","O","I","I","I","I","O","O","O","O","I","I","O","I","I","I","I","O","I","I","I","I","O","O","I","I","O","O","O","O","O","I")
length(a)
a<-c
length(a)
ndata$species
b<-c("GA","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","GA","GA","GA","GA","GA","SC","SC","SC","SC","SC","SC","SC","SC","SC","SC","GA","SC","SC","SC","SC","SC","SC","GA","SC","GA","GA","GA","GA","SC","GA","GA","GA","GA","GA","GA","GA","GA","GA","MR","GA","GA","MR","GA","GA","GA","GA","MR","MR","MR","MR","GA","CL","CL","CL","CL","CL","GA","GA","CL","CL","CL","SC","GA","CL","SC","SC","SC","GA","GA","MR","AH","GA","CL","AH","AH","CL","SC","SC","SC","CL","MR","CL","SC","SC","SC","GA","SC","SC","GA","GA","GA","GA","MR","MR","GA","AH","AH","AH","AH","CL","CL","CL","CL","GA","CL","CL","MR","GA","AH","AH","CL","CL","CL","AH","AH","AH","AH","SC","AH","AH","AH","AH","AH","AH","SC","MR","MR","CL","CL","CL","CL","CL","CL","MR","CL","CL","AH","GR","AH","GR","AH","GR","SC","AH","AH","MR","GA","GR","GR","GA","GR","GR","AH","GA","AH","AH","MR","CL","MR","GA","GR","MR","GR","GR","GR","GR","AH","MR","MR","AH","CL","GR","CL","SC","MR","CL","CL","MR","CL","MR","AH","MR","MR","AH","CL","MR","MR","GA","SC","GA","GA","CL","MR","SC","SC","MR","SC","GA","MR","SC","CL","MR")
length(b)
summary(y)
plot(density(y))
mu <- mean(y)
var <- var(y)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
estBetaParams(mu, var)
ndata$pop
g<-c("8","11","11","10","10","10","11","2","11","11","10","11","10","10","7","8","7","7","7","8","8","8","8","8","4","4","4","4","4","7","3","3","7","13","13","13","5","5","5","1","14","14","14","14","14","14","14","13","1","7","7","1","13","7","14","5","1","3","14","1","3","5","7","3","13","5","13","8","13","14","7","7","7","5","5","14","2","5","13","11","3","14","3","13","3","4","3","3","5","3","4","4","8","1","10","8","13","7","8","14","2","4","1","1","5","7","2","4","2","13","4","1","14","5","13","13","7","7","7","2","4","8","5","8","11","7","8","11","1","11","4","11","10","4","3","1","13","2","4","10","5","5","5","7","8","10","8","2","3","1","8","7","14","11","8","13","2","3","8","14","5","7","7","11","2","5","2","2","8","5","3","5","14","5","13","13","5","11","2","5","3","3","4","7","5","3","5","14","1","1","8","8","1","4","3","2","8","1","4","2","2","1","2","8","4","5","1","4","8","8","3","11","2","5","8","7","3","1","1","5","4","13","4","5","7","3")
length(g)
df<-cbind(a,b,y,g)
View(df)
a<-c("0","1","0","0","0","1","0","0","1","1","0","0","1","1","0","0","1","1","1","1","0","0","1","1","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","1","1","0","1","1","0","0","1","1","1","1","1","1","1","0","1","0","0","0","0","0","0","0","0","1","0","1","0","1","0","0","1","0","1","1","0","1","1","0","0","0","0","0","1","1","1","1","1","1","0","1","0","1","0","0","1","1","0","0","1","1","0","1","0","0","0","1","1","1","1","1","0","1","1","0","1","1","1","0","1","1","1","1","0","0","0","1","1","0","1","1","0","1","0","1","1","0","0","0","0","0","0","0","0","0","0","1","0","1","1","1","1","0","0","0","0","1","1","0","1","1","1","1","0","1","1","1","1","0","0","1","1","0","0","0","0","0","1","1","0","1","1","0","0","0","0","1","1","0","0","0","1","0","0","1","0","0","1","1","0","0","1","1","0","0","0","0","0","0","0","1","0","1","0","0","0","0","1","1","0","0","0","1","1","0","0","0")
b<-c("x","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","x","x","x","x","x","y","y","y","y","y","y","y","y","y","y","x","y","y","y","y","y","y","x","y","x","x","x","x","y","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","r","r","r","r","r","x","x","r","r","r","y","x","r","y","y","y","x","x","x","p","x","r","p","p","r","y","y","y","r","x","r","y","y","y","x","y","y","x","x","x","x","x","x","x","p","p","p","p","r","r","r","r","x","r","r","x","x","p","p","r","r","r","p","p","p","p","y","p","p","p","p","p","p","y","x","x","r","r","r","r","r","r","x","r","r","p","q","p","q","p","q","y","p","p","x","x","q","q","x","q","q","p","x","p","p","x","r","x","x","q","x","q","q","q","q","p","x","x","p","r","q","r","y","x","r","r","x","r","x","p","x","x","p","r","x","x","x","y","x","x","r","x","y","y","x","y","x","x","y","r","x")
y<-c(0.80,0.95,0.96,0.85,0.86,0.82,0.81,0.93,0.87,0.99,1.00,0.95,0.98,0.64,0.56,0.83,0.72,0.82,0.78,0.60,0.45,0.83,0.77,0.38,0.53,0.39,0.37,0.35,0.67,0.60,0.80,0.77,0.92,0.76,0.69,0.80,0.79,0.73,0.47,0.75,0.71,0.73,0.55,0.82,0.71,0.38,0.78,0.32,0.47,0.80,0.47,0.89,0.72,0.63,0.44,0.38,0.41,0.80,0.73,0.64,0.83,0.53,0.38,0.43,0.18,0.17,0.19,0.48,0.46,0.32,0.48,0.32,0.16,0.35,0.31,0.67,0.43,0.52,0.59,0.45,0.47,0.04,0.76,0.52,0.76,0.26,0.57,0.89,0.28,0.38,0.34,0.36,0.25,0.81,0.43,0.36,0.99,0.66,0.61,0.54,0.46,0.72,0.49,0.39,0.95,0.91,0.93,0.44,0.61,0.79,0.71,0.43,0.35,0.77,0.66,0.73,0.72,0.55,0.73,0.72,0.49,0.53,0.70,0.71,0.61,0.33,0.26,0.70,0.51,0.19,0.54,0.81,0.22,0.28,0.10,0.03,0.72,0.68,0.41,1.00,0.70,0.58,0.92,0.36,0.84,0.71,0.86,0.95,0.88,0.84,0.49,0.44,0.66,0.49,0.67,0.92,0.87,0.77,0.69,0.72,0.82,0.86,0.90,0.83,0.78,0.92,0.84,0.61,0.82,0.82,0.70,0.13,0.51,0.44,0.58,0.92,0.92,0.69,0.49,0.76,0.49,0.72,0.52,0.57,0.18,0.73,0.72,0.60,0.61,0.66,0.80,0.75,0.86,0.41,0.47,0.38,0.84,0.49,0.76,0.77,0.87,0.45,0.53,0.25,0.39,0.50,0.92,0.69,0.69,0.82,0.85,0.41,0.64,0.60,0.75,0.53,0.83,0.50,0.67,0.69,0.69,0.80,0.83,0.73,0.21,0.57)
g<-c("8","11","11","10","10","10","11","2","11","11","10","11","10","10","7","8","7","7","7","8","8","8","8","8","4","4","4","4","4","7","3","3","7","13","13","13","5","5","5","1","14","14","14","14","14","14","14","13","1","7","7","1","13","7","14","5","1","3","14","1","3","5","7","3","13","5","13","8","13","14","7","7","7","5","5","14","2","5","13","11","3","14","3","13","3","4","3","3","5","3","4","4","8","1","10","8","13","7","8","14","2","4","1","1","5","7","2","4","2","13","4","1","14","5","13","13","7","7","7","2","4","8","5","8","11","7","8","11","1","11","4","11","10","4","3","1","13","2","4","10","5","5","5","7","8","10","8","2","3","1","8","7","14","11","8","13","2","3","8","14","5","7","7","11","2","5","2","2","8","5","3","5","14","5","13","13","5","11","2","5","3","3","4","7","5","3","5","14","1","1","8","8","1","4","3","2","8","1","4","2","2","1","2","8","4","5","1","4","8","8","3","11","2","5","8","7","3","1","1","5","4","13","4","5","7","3")
df<-cbind(a,b,y,g)
a<-as.factor(c("0","1","0","0","0","1","0","0","1","1","0","0","1","1","0","0","1","1","1","1","0","0","1","1","0","1","1","0","0","0","0","0","0","0","0","0","1","1","1","1","1","0","1","1","0","0","1","1","1","1","1","1","1","0","1","0","0","0","0","0","0","0","0","1","0","1","0","1","0","0","1","0","1","1","0","1","1","0","0","0","0","0","1","1","1","1","1","1","0","1","0","1","0","0","1","1","0","0","1","1","0","1","0","0","0","1","1","1","1","1","0","1","1","0","1","1","1","0","1","1","1","1","0","0","0","1","1","0","1","1","0","1","0","1","1","0","0","0","0","0","0","0","0","0","0","1","0","1","1","1","1","0","0","0","0","1","1","0","1","1","1","1","0","1","1","1","1","0","0","1","1","0","0","0","0","0","1","1","0","1","1","0","0","0","0","1","1","0","0","0","1","0","0","1","0","0","1","1","0","0","1","1","0","0","0","0","0","0","0","1","0","1","0","0","0","0","1","1","0","0","0","1","1","0","0","0"))
b<-as.factor(c("x","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","y","x","x","x","x","x","y","y","y","y","y","y","y","y","y","y","x","y","y","y","y","y","y","x","y","x","x","x","x","y","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","x","r","r","r","r","r","x","x","r","r","r","y","x","r","y","y","y","x","x","x","p","x","r","p","p","r","y","y","y","r","x","r","y","y","y","x","y","y","x","x","x","x","x","x","x","p","p","p","p","r","r","r","r","x","r","r","x","x","p","p","r","r","r","p","p","p","p","y","p","p","p","p","p","p","y","x","x","r","r","r","r","r","r","x","r","r","p","q","p","q","p","q","y","p","p","x","x","q","q","x","q","q","p","x","p","p","x","r","x","x","q","x","q","q","q","q","p","x","x","p","r","q","r","y","x","r","r","x","r","x","p","x","x","p","r","x","x","x","y","x","x","r","x","y","y","x","y","x","x","y","r","x"))
y<-c(0.80,0.95,0.96,0.85,0.86,0.82,0.81,0.93,0.87,0.99,1.00,0.95,0.98,0.64,0.56,0.83,0.72,0.82,0.78,0.60,0.45,0.83,0.77,0.38,0.53,0.39,0.37,0.35,0.67,0.60,0.80,0.77,0.92,0.76,0.69,0.80,0.79,0.73,0.47,0.75,0.71,0.73,0.55,0.82,0.71,0.38,0.78,0.32,0.47,0.80,0.47,0.89,0.72,0.63,0.44,0.38,0.41,0.80,0.73,0.64,0.83,0.53,0.38,0.43,0.18,0.17,0.19,0.48,0.46,0.32,0.48,0.32,0.16,0.35,0.31,0.67,0.43,0.52,0.59,0.45,0.47,0.04,0.76,0.52,0.76,0.26,0.57,0.89,0.28,0.38,0.34,0.36,0.25,0.81,0.43,0.36,0.99,0.66,0.61,0.54,0.46,0.72,0.49,0.39,0.95,0.91,0.93,0.44,0.61,0.79,0.71,0.43,0.35,0.77,0.66,0.73,0.72,0.55,0.73,0.72,0.49,0.53,0.70,0.71,0.61,0.33,0.26,0.70,0.51,0.19,0.54,0.81,0.22,0.28,0.10,0.03,0.72,0.68,0.41,1.00,0.70,0.58,0.92,0.36,0.84,0.71,0.86,0.95,0.88,0.84,0.49,0.44,0.66,0.49,0.67,0.92,0.87,0.77,0.69,0.72,0.82,0.86,0.90,0.83,0.78,0.92,0.84,0.61,0.82,0.82,0.70,0.13,0.51,0.44,0.58,0.92,0.92,0.69,0.49,0.76,0.49,0.72,0.52,0.57,0.18,0.73,0.72,0.60,0.61,0.66,0.80,0.75,0.86,0.41,0.47,0.38,0.84,0.49,0.76,0.77,0.87,0.45,0.53,0.25,0.39,0.50,0.92,0.69,0.69,0.82,0.85,0.41,0.64,0.60,0.75,0.53,0.83,0.50,0.67,0.69,0.69,0.80,0.83,0.73,0.21,0.57)
g<-as.factor(c("8","11","11","10","10","10","11","2","11","11","10","11","10","10","7","8","7","7","7","8","8","8","8","8","4","4","4","4","4","7","3","3","7","13","13","13","5","5","5","1","14","14","14","14","14","14","14","13","1","7","7","1","13","7","14","5","1","3","14","1","3","5","7","3","13","5","13","8","13","14","7","7","7","5","5","14","2","5","13","11","3","14","3","13","3","4","3","3","5","3","4","4","8","1","10","8","13","7","8","14","2","4","1","1","5","7","2","4","2","13","4","1","14","5","13","13","7","7","7","2","4","8","5","8","11","7","8","11","1","11","4","11","10","4","3","1","13","2","4","10","5","5","5","7","8","10","8","2","3","1","8","7","14","11","8","13","2","3","8","14","5","7","7","11","2","5","2","2","8","5","3","5","14","5","13","13","5","11","2","5","3","3","4","7","5","3","5","14","1","1","8","8","1","4","3","2","8","1","4","2","2","1","2","8","4","5","1","4","8","8","3","11","2","5","8","7","3","1","1","5","4","13","4","5","7","3"))
df<-cbind(a,b,y,g)
library(glmmTMB)
mod1.beta<-glmmTMB(y~ a + b + a:b +
(1|g),
data=df, family=list(family="beta",link="logit"))
df<-data.frame(cbind(a,b,y,g))
mod1.beta<-glmmTMB(y~ a + b + a:b +
(1|g),
data=df, family=list(family="beta",link="logit"))
estBetaParams(mu, var) # both alpha and beta are positive numbers... but they are soooo big...
y.s<-scale(y)
plot(density(y.s))
lambda
y.s<-((y^lambda)-1)/lambda
plot(density(y.s))
y.s<-y^lambda
plot(density(y.s))
mu <- mean(y.s)
var <- var(y.s)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
estBetaParams(mu, var) # both alpha and beta are positive numbers... but they are soooo big...
mod1.beta<-glmmTMB(y.s~ a + b + a:b +
(1|g),
data=df, family=list(family="beta",link="logit"))
df$y.t<-(((df$y*length(df$y))-1)+0.5)/length(df$y)
plot(density(y.t))
plot(density(df$y.t))
summary(y.t)
summary(df$y.t)
plot(density(df$y.t))
mu <- mean(y.t)
mu <- mean(df$y.t)
var <- var(df$y.y)
var <- var(df$y.t)
estBetaParams <- function(mu, var) {
alpha <- ((1 - mu) / var - 1 / mu) * mu ^ 2
beta <- alpha * (1 / mu - 1)
return(params = list(alpha = alpha, beta = beta))
}
estBetaParams(mu, var) # both alpha and beta are positive numbers... but they are soooo big...
mod1.beta<-glmmTMB(y.t~ a + b + a:b +
(1|g),
data=df, family=list(family="beta",link="logit"))
library(glmmTMB)
mod1.beta<-glmmTMB(y.t~ a + b + a:b +
(1|g),
data=df, family=list(family="beta",link="logit"))
summary(mod1.beta)
